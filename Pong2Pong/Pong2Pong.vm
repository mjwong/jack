function Pong2Pong.new 0
push constant 6
call Memory.alloc 1
pop pointer 0
push constant 0
push constant 100
push constant 64
call Pad.new 3
pop this 0
push constant 400
push constant 100
push constant 64
call Pad.new 3
pop this 1
push constant 20
push constant 200
push constant 2
push constant 1
push constant 1
call Ball.new 5
pop this 2
push constant 0
pop this 3
push constant 0
pop this 4
push constant 0
pop this 5
push pointer 0
return
function Pong2Pong.dispose 0
push argument 0
pop pointer 0
push this 0
call Pad.dispose 1
pop temp 0
push this 1
call Pad.dispose 1
pop temp 0
push this 2
call Ball.dispose 1
pop temp 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
function Pong2Pong.Status 0
push argument 0
pop pointer 0
push constant 20
push constant 52
call Output.moveCursor 2
pop temp 0
push constant 7
call String.new 1
push constant 83
call String.appendChar 2
push constant 99
call String.appendChar 2
push constant 111
call String.appendChar 2
push constant 114
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 58
call String.appendChar 2
push constant 32
call String.appendChar 2
call Output.printString 1
pop temp 0
push this 4
call Output.printInt 1
pop temp 0
push constant 10
push constant 52
call Output.moveCursor 2
pop temp 0
push constant 9
call String.new 1
push constant 72
call String.appendChar 2
push constant 105
call String.appendChar 2
push constant 115
call String.appendChar 2
push constant 116
call String.appendChar 2
push constant 111
call String.appendChar 2
push constant 114
call String.appendChar 2
push constant 121
call String.appendChar 2
push constant 58
call String.appendChar 2
push constant 32
call String.appendChar 2
call Output.printString 1
pop temp 0
push this 5
call Output.printInt 1
pop temp 0
push constant 0
return
function Pong2Pong.RunopCode 0
push argument 0
pop pointer 0
push this 3
push constant 1
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 0
call Pad.moveUp 1
pop temp 0
label IF_FALSE0
push this 3
push constant 2
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push this 0
call Pad.moveDown 1
pop temp 0
label IF_FALSE1
push this 3
push constant 3
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push this 1
call Pad.moveUp 1
pop temp 0
label IF_FALSE2
push this 3
push constant 4
eq
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push this 1
call Pad.moveDown 1
pop temp 0
label IF_FALSE3
push constant 5
call Sys.wait 1
pop temp 0
push constant 0
return
function Pong2Pong.Restart 0
push argument 0
pop pointer 0
call Screen.clearScreen 0
pop temp 0
push this 0
call Pad.dispose 1
pop temp 0
push this 1
call Pad.dispose 1
pop temp 0
push this 2
call Ball.dispose 1
pop temp 0
push constant 0
push constant 100
push constant 64
call Pad.new 3
pop this 0
push constant 400
push constant 100
push constant 64
call Pad.new 3
pop this 1
push constant 20
push constant 200
push constant 2
push constant 1
push constant 1
call Ball.new 5
pop this 2
push constant 0
pop this 3
push constant 0
pop this 4
push constant 0
not
call Screen.setColor 1
pop temp 0
push constant 406
push constant 0
push constant 406
push constant 254
call Screen.drawLine 4
pop temp 0
push pointer 0
call Pong2Pong.Status 1
pop temp 0
push constant 0
return
function Pong2Pong.run 2
push argument 0
pop pointer 0
push constant 0
pop local 1
push constant 0
not
call Screen.setColor 1
pop temp 0
push constant 406
push constant 0
push constant 406
push constant 254
call Screen.drawLine 4
pop temp 0
push pointer 0
call Pong2Pong.Status 1
pop temp 0
label WHILE_EXP0
push local 1
not
not
if-goto WHILE_END0
label WHILE_EXP1
push local 0
push constant 0
eq
not
if-goto WHILE_END1
push this 2
push this 0
call Pad.returnY 1
push this 1
call Pad.returnY 1
call Ball.Update 3
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 2
call Ball.returnScore 1
pop this 4
push pointer 0
call Pong2Pong.Status 1
pop temp 0
label IF_FALSE0
push this 4
push this 5
gt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push this 4
pop this 5
push pointer 0
call Pong2Pong.Status 1
pop temp 0
label IF_FALSE1
call Keyboard.keyPressed 0
pop local 0
push pointer 0
call Pong2Pong.RunopCode 1
pop temp 0
goto WHILE_EXP1
label WHILE_END1
push local 0
push constant 82
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push pointer 0
call Pong2Pong.Restart 1
pop temp 0
label IF_FALSE2
push local 0
push constant 81
eq
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push constant 0
not
pop local 1
label IF_FALSE3
push local 0
push constant 131
eq
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push constant 3
pop this 3
label IF_FALSE4
push local 0
push constant 133
eq
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push constant 4
pop this 3
label IF_FALSE5
push local 0
push constant 87
eq
if-goto IF_TRUE6
goto IF_FALSE6
label IF_TRUE6
push constant 1
pop this 3
label IF_FALSE6
push local 0
push constant 83
eq
if-goto IF_TRUE7
goto IF_FALSE7
label IF_TRUE7
push constant 2
pop this 3
label IF_FALSE7
label WHILE_EXP2
push local 0
push constant 0
eq
not
not
if-goto WHILE_END2
call Keyboard.keyPressed 0
pop local 0
push pointer 0
call Pong2Pong.RunopCode 1
pop temp 0
push this 2
push this 0
call Pad.returnY 1
push this 1
call Pad.returnY 1
call Ball.Update 3
if-goto IF_TRUE8
goto IF_FALSE8
label IF_TRUE8
push this 2
call Ball.returnScore 1
pop this 4
push pointer 0
call Pong2Pong.Status 1
pop temp 0
label IF_FALSE8
push this 4
push this 5
gt
if-goto IF_TRUE9
goto IF_FALSE9
label IF_TRUE9
push this 4
pop this 5
push pointer 0
call Pong2Pong.Status 1
pop temp 0
label IF_FALSE9
goto WHILE_EXP2
label WHILE_END2
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
