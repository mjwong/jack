function MathUtils.init 1
push constant 3
call Array.new 1
pop static 0
push constant 16
call Array.new 1
pop local 0
push constant 0
push local 0
add
push constant 115
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push local 0
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 2
push local 0
add
push constant 12
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 3
push local 0
add
push constant 24
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 4
push local 0
add
push constant 36
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 5
push local 0
add
push constant 47
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 6
push local 0
add
push constant 57
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 7
push local 0
add
push constant 68
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 8
push local 0
add
push constant 77
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 9
push local 0
add
push constant 85
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 10
push local 0
add
push constant 93
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 11
push local 0
add
push constant 100
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 12
push local 0
add
push constant 105
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 13
push local 0
add
push constant 109
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 14
push local 0
add
push constant 112
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 15
push local 0
add
push constant 114
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
push static 0
add
push local 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 16
call Array.new 1
pop local 0
push constant 0
push local 0
add
push constant 100
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push local 0
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 2
push local 0
add
push constant 10
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 3
push local 0
add
push constant 21
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 4
push local 0
add
push constant 31
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 5
push local 0
add
push constant 41
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 6
push local 0
add
push constant 50
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 7
push local 0
add
push constant 59
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 8
push local 0
add
push constant 67
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 9
push local 0
add
push constant 74
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 10
push local 0
add
push constant 81
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 11
push local 0
add
push constant 87
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 12
push local 0
add
push constant 91
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 13
push local 0
add
push constant 95
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 14
push local 0
add
push constant 98
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 15
push local 0
add
push constant 99
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push static 0
add
push local 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 16
call Array.new 1
pop local 0
push constant 0
push local 0
add
push constant 75
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push local 0
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 2
push local 0
add
push constant 8
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 3
push local 0
add
push constant 16
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 4
push local 0
add
push constant 23
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 5
push local 0
add
push constant 31
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 6
push local 0
add
push constant 37
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 7
push local 0
add
push constant 44
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 8
push local 0
add
push constant 50
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 9
push local 0
add
push constant 56
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 10
push local 0
add
push constant 61
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 11
push local 0
add
push constant 65
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 12
push local 0
add
push constant 69
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 13
push local 0
add
push constant 71
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 14
push local 0
add
push constant 73
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 15
push local 0
add
push constant 75
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 2
push static 0
add
push local 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
return
function MathUtils.sinTable 2
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push constant 4
lt
not
if-goto WHILE_END0
push local 0
push static 0
add
pop pointer 1
push that 0
pop local 1
push constant 0
push local 1
add
pop pointer 1
push that 0
push argument 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 1
return
label IF_FALSE0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 99
call Sys.error 1
pop temp 0
push constant 0
return
function MathUtils.modulo 0
push argument 0
push constant 0
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push argument 0
push argument 1
add
pop argument 0
label IF_FALSE0
push argument 0
push argument 0
push argument 1
call Math.divide 2
push argument 1
call Math.multiply 2
sub
return
function MathUtils.power 1
push constant 1
pop local 0
label WHILE_EXP0
push argument 1
push constant 0
gt
not
if-goto WHILE_END0
push local 0
push argument 0
call Math.multiply 2
pop local 0
push argument 1
push constant 1
sub
pop argument 1
goto WHILE_EXP0
label WHILE_END0
push local 0
return
function MathUtils.rsin 1
push argument 0
call MathUtils.sinTable 1
pop local 0
push argument 1
push constant 1
neg
gt
push argument 1
push constant 15
lt
and
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push argument 1
push constant 1
add
push local 0
add
pop pointer 1
push that 0
return
label IF_FALSE0
push argument 1
push constant 14
gt
push argument 1
push constant 30
lt
and
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 29
push argument 1
sub
push constant 1
add
push local 0
add
pop pointer 1
push that 0
return
label IF_FALSE1
push argument 1
push constant 29
gt
push argument 1
push constant 45
lt
and
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push constant 1
neg
push argument 1
push constant 30
sub
push constant 1
add
push local 0
add
pop pointer 1
push that 0
call Math.multiply 2
return
label IF_FALSE2
push argument 1
push constant 44
gt
push argument 1
push constant 60
lt
and
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push constant 1
neg
push constant 59
push argument 1
sub
push constant 1
add
push local 0
add
pop pointer 1
push that 0
call Math.multiply 2
return
label IF_FALSE3
push constant 99
call Sys.error 1
pop temp 0
push constant 0
return
function MathUtils.rcos 0
push constant 1
neg
push argument 0
push argument 1
push constant 15
add
push constant 60
call MathUtils.modulo 2
call MathUtils.rsin 2
call Math.multiply 2
return
