// class Main

// function void main ( ) { 

// var Array r ; 
function Main.main 1

// let r = 8000 ; 
push constant 8000
pop local 0

// let r [ 0 ] = 2 * 3 ; 
push local 0
push constant 0
add
push constant 2
push constant 3
call Math.multiply 2
pop temp 0
pop pointer 1
push temp 0
pop that 0

// let r [ 1 ] = r [ 0 ] * ( - 30 ) ; 
push local 0
push constant 1
add
push local 0
push constant 0
add
pop pointer 1
push that 0
push constant 30
neg
call Math.multiply 2
pop temp 0
pop pointer 1
push temp 0
pop that 0

// let r [ 2 ] = r [ 1 ] * 100 ; 
push local 0
push constant 2
add
push local 0
push constant 1
add
pop pointer 1
push that 0
push constant 100
call Math.multiply 2
pop temp 0
pop pointer 1
push temp 0
pop that 0

// let r [ 3 ] = 1 * r [ 2 ] ; 
push local 0
push constant 3
add
push constant 1
push local 0
push constant 2
add
pop pointer 1
push that 0
call Math.multiply 2
pop temp 0
pop pointer 1
push temp 0
pop that 0

// let r [ 4 ] = r [ 3 ] * 0 ; 
push local 0
push constant 4
add
push local 0
push constant 3
add
pop pointer 1
push that 0
push constant 0
call Math.multiply 2
pop temp 0
pop pointer 1
push temp 0
pop that 0

// let r [ 5 ] = 9 / 3 ; 
push local 0
push constant 5
add
push constant 9
push constant 3
call Math.divide 2
pop temp 0
pop pointer 1
push temp 0
pop that 0

// let r [ 6 ] = ( - 18000 ) / 6 ; 
push local 0
push constant 6
add
push constant 18000
neg
push constant 6
call Math.divide 2
pop temp 0
pop pointer 1
push temp 0
pop that 0

// let r [ 7 ] = 32766 / ( - 32767 ) ; 
push local 0
push constant 7
add
push constant 32766
push constant 32767
neg
call Math.divide 2
pop temp 0
pop pointer 1
push temp 0
pop that 0

// let r [ 8 ] = Math . sqrt ( 9 ) ; 
push local 0
push constant 8
add
push constant 9
call Math.sqrt 1
pop temp 0
pop pointer 1
push temp 0
pop that 0

// let r [ 9 ] = Math . sqrt ( 32767 ) ; 
push local 0
push constant 9
add
push constant 32767
call Math.sqrt 1
pop temp 0
pop pointer 1
push temp 0
pop that 0

// let r [ 10 ] = Math . min ( 345 , 123 ) ; 
push local 0
push constant 10
add
push constant 345
push constant 123
call Math.min 2
pop temp 0
pop pointer 1
push temp 0
pop that 0

// let r [ 11 ] = Math . max ( 123 , - 345 ) ; 
push local 0
push constant 11
add
push constant 123
push constant 345
neg
call Math.max 2
pop temp 0
pop pointer 1
push temp 0
pop that 0

// let r [ 12 ] = Math . abs ( 27 ) ; 
push local 0
push constant 12
add
push constant 27
call Math.abs 1
pop temp 0
pop pointer 1
push temp 0
pop that 0

// let r [ 13 ] = Math . abs ( - 32767 ) ; 
push local 0
push constant 13
add
push constant 32767
neg
call Math.abs 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
return
